⦁ 2025년 04월 15일(화)
⦁ 단원명 : CSS, JavaScript(core)
⦁ 학습 주제 : CSS 문단스타일, 목록스타일, 배경스타일, 레이아웃스타일
⦁ 학습 내용 : 
- CSS 문단 스타일 
  ▶ direction 속성 : 텍스트의 흐름 방향을 지정
      /* 좌측정렬 */
        #p1 {
            direction: ltr;
        }
        /* 우측정렬 */
        #p2 {
            direction: rtl;
        }
  ▶ text-align 속성 : 텍스트의 정렬 방식을 지정
        /* 좌측정렬 */
        #p3 {
            text-align: left;
        }
        /* 우측정렬 */
        #p4 {
            text-align: right;
        }
        /* 가운데 정렬 */
        #p5 {
            text-align: center;
        }
        /* 양쪽정렬 */
        #p6 {
            text-align: justify;
        }
  ▶ text-justify 속성 : 텍스트의 줄 내용의 양쪽 정렬을 지정
        /* 줄 간격 조절 */
        #p7 {
            line-height: normal;
        }
        #p8 {
            line-height: 30px;
        }
        #p9 {
            line-height: 1.5em;
        }
        #p10 {
            line-height: 200%;
        }
- CSS 목록 스타일
  ▶ list-style-type 속성 : 목록 마커의 유형을 지정
   #default-bullet {
      list-style-type: disc;
    }
    #circle-bullet{
      list-style: circle;
    }
    #square-bullet {
      list-style-type: square;
    }
    #none-bullet {
      list-style-type: none;
    }
    #default-number {
      list-style-type: decimal;
    }
    #zero-number {
      list-style-type: decimal-leading-zero;
    }
    #lower-rome-number {
      list-style-type: lower-roman;
    }
    #upper-rome-number {
      list-style-type: upper-roman;
    }
    #lower-alpha {
      list-style-type: lower-alpha;
    }
    #upper-alpha {
      list-style-type: upper-alpha;
    }
  ▶ list-style-image 속성 : 목록 마커로 사용할 이미지를 지정, 이미지 경로를 url()로 감싸서 지정
    #image-bullet {
      list-style-image: url("sample/image/strawberry.png");
    }
- CSS 배경 스타일 
  ▶ background 속성 : CSS 배경 속성은 요소의 배경을 지정
        body {
            background: rebeccapurple;
            background: rgb(20, 40, 200);
            background: rgba(20, 40, 200, 0.6);
            background: hsl(120, 50%, 50%);
            background: hsla(120, 50%, 50%, 0.4);

            background: #d93e137b;
        }

        #div-bg {
            width: 50%;
            background: wheat;
        }
  ▶ background-clip 속성 : 요소의 배경을 어디까지 적용할지 지정
        #div1 {
            background-clip: border-box;
        }
        #div2 {
            background-clip: padding-box;
        }
        #div3 {
            background-clip: content-box;
        }
  ▶ background-image : 요소의 배경에 사용할 이미지 경로를 지정, 이미지 경로는 url() 함수로 지정
  ▶ background-repeat : 배경 이미지의 반복 여부를 지정하는 속성
  ▶ background-size : 배경 이미지의 크기를 지정하는 속성
  ▶ background-position : 배경 이미지의 위치를 지정하는 속성
      #bg-img {
            width: 70%;
            height: 1600px;
            border: 4px solid red;
            background-image: url("sample/image/flower1.PNG");

            background-repeat: no-repeat;

            background-size: cover;
            background-size: contain;
            background-size: auto;

            background-attachment: fixed;
            background-attachment: scroll;

            background-position: 50% 50%;
            background-position: 30px 50px;
            background-position: right;
        }
- 레이아웃 스타일
  ▶ height/width 속성 : height와 width 속성은 각각 요소의 높이와 너비를 지정
  ▶ 블록 레벨 요소 : 블록 레벨 요소는 한 줄 전체를 차지하며, 새로운 줄에서 시작합니다.
  ▶ 인라인 레벨 요소 : 인라인 레벨 요소는 블록 레벨 요소 안에서 쓰이며, 컨텐츠의 일부분만 차지함
  ▶ display 속성 : 요소를 어떻게 보여줄지를 지정
  ▶ padding : 컨텐츠와 테두리 사이의 여백을 지정하는 속성
  ▶ margin : 테두리 바깥쪽 여백을 지정하는 속성

- CSS 실습 문제
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    #header {
      background: blue;      
      width: 600px;
      height: 100px;
    }
    #nav {
      background: red;
      width: 100px;
      height: 400px;
      float: left;
    }
    #section {
      background-color: green;
      width: 400px;
      height: 400px;    
      float: left;
    }
    #article1 {
      background-color: yellowgreen;
      height: 120px;
      margin-left: 20px;
      margin-right: 20px;
    }
    #article2 {
      background-color: pink;
      height: 120px;
      margin-left: 20px;
      margin-right: 20px;
    }
    #article3 {
      background-color: aqua;
      height: 120px;
      margin-left: 20px;
      margin-right: 20px;
    }
    #aside {
      background: wheat;
      width: 100px;
      height: 400px;
      float: left;
    }
    #footer {
      background-color: rgb(123, 0, 129);
      width: 600px;
      height: 450px;
    }
  </style>
</head>
<body>
  <h1>페이지 레이아웃 스타일</h1>
  <div id="header">header</div>
  <nav class="test" id="nav">nav</nav>
  <section class="test" id="section">section
    <article class="article" id="article1">article1</article>
    <article class="article" id="article2">article2</article>
    <article class="article" id="article3">article3</article>
  </section>
  <aside class="test" id="aside">aside</aside>
  <footer id="footer">footer</footer>
</body>
</html>

- JavaScript개요
1. 특징 : 
  - 웹 브라우저에서 동작하는 유일한 프로그래밍 언어
  - 개발자가 별도의 컴파일 작업을 수행하지 않는 인터프리터 언어
  - 강력한 프로토타입 기반의 객체지향 언어
2. 개발환경 구축 : 
  - 자바스크립트는 브라우저 환경 또는 Node.js 환경에서 실행할 수 있다.
  - 다양한 웹 브라우저 환경 중 ECMAScript 사양을 준수하며 시장 점유율도 높은 구글 Chrome 브라우저를 사용한다.

- variable(변수)
1. 데이터 타입
  1-1 number(숫자 타입) : 자바스크립트의 경우 하나의 숫자 타입만 존재하고 모든 수를 실수로 처리한다.
      var integer = 10;
      var double = 5.5;
      var negative = -10;
  1-2 string(문자열 타입) : 텍스트 데이터를 나타내는데 사용한다. 작은 따옴표(’’), 큰 따옴표(""), 또는 백틱(``)으로 텍스트를 감싼다.
      var string;
      string = 'JavaScript';  // 작은 따옴표
      string = "JavaScript";  // 큰 따옴표
      string = `JavaScript`;  // 백틱(ES6)
  1-3  boolean(논리 타입) : 불리언 타입의 값은 논리적 참, 거짓을 나타내는 true와 false뿐이다.
      var flag = true;
      console.log(flag);
      flag = false;
      console.log(flag);
  1-4  undefined and null : undefined 타입의 값은 undefined가 유일하다.var 키워드로 선언한 변수는 암묵적으로 undefined로 초기화 되므로 
      변수를 선언한 이후 값을 할당하지 않은 변수를 참조하면 undefined가 반환된다.
      null 타입의 값은 null이 유일하다. 변수에 값이 없다는 것을 의도적으로 명시할 때 사용한다.
  1-5 symbol and object : 다른 값과 중복 되지 않는 유일무이한 값으로 이름 충돌할 위험이 없는 객체의 유일한 프로퍼티 키를 만들기 위해 사용한다.
